/*****************************************************************************/
/*
  Variables
*/

$blue:      #268bd2;
$darkblue:  #0a5061;
$green:     #2a9c79;
$orange:    #d35b41;
$dark-gray: #333;
$med-gray:  #666;
$off-white: #f7f9fb;

$link-color: $orange;
$text-color: $dark-gray;

/*****************************************************************************/
/*
  Frameless - http://framelessgrid.com
    - by Joni Korpi - http://jonikorpi.com
    - licensed under CC0 - http://creativecommons.org/publicdomain/zero/1.0
*/

$font-size: 16px;     // Your base font-size in pixels
$em: $font-size / 1em;  // Shorthand for outputting ems

$column: 48px;  // The column-width of your grid in pixels
$gutter: 24px;  // The gutter-width of your grid in pixels

//
// Column-widths in variables, in ems
//

 $cols1: ( 1 * ($column + $gutter) - $gutter) / $em;
 $cols2: ( 2 * ($column + $gutter) - $gutter) / $em;
 $cols3: ( 3 * ($column + $gutter) - $gutter) / $em;
 $cols4: ( 4 * ($column + $gutter) - $gutter) / $em;
 $cols5: ( 5 * ($column + $gutter) - $gutter) / $em;
 $cols6: ( 6 * ($column + $gutter) - $gutter) / $em;
 $cols7: ( 7 * ($column + $gutter) - $gutter) / $em;
 $cols8: ( 8 * ($column + $gutter) - $gutter) / $em;
 $cols9: ( 9 * ($column + $gutter) - $gutter) / $em;
$cols10: (10 * ($column + $gutter) - $gutter) / $em;
$cols11: (11 * ($column + $gutter) - $gutter) / $em;
$cols12: (12 * ($column + $gutter) - $gutter) / $em;
$cols13: (13 * ($column + $gutter) - $gutter) / $em;
$cols14: (14 * ($column + $gutter) - $gutter) / $em;
$cols15: (15 * ($column + $gutter) - $gutter) / $em;
$cols16: (16 * ($column + $gutter) - $gutter) / $em;


//
// Column-widths in a function, in ems
//

@mixin width ($cols:1) {
  width: ($cols * ($column + $gutter) - $gutter) / $em;
}
  .wrapper {
    width:($column + $gutter) * 16; // 12 columns
    margin:0 auto;
    padding:0;
  }
  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}

/* Defaults for showing/hiding divs based on screen size */

.show-default, .show-tablet, .show-mobile-wide, .show-mobile { display:none !important; }
.hide-default, .hide-tablet, .hide-mobile-wide, .hide-mobile { display:block !important; }

//
// Default Layout, 12 columns
//
/* Default Layout */
@media only screen and (min-width: 1040px) {

  $column: 65px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels

  .show-default { display:block !important; }
  .hide-default { display:none !important; }

  .wrapper {
    width:($column + $gutter) * 12; // 12 columns
    margin:0 auto;
    padding:0;
  }

   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 2 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 4 * ($column + $gutter) - $gutter );
   $cols5: ( 5 * ($column + $gutter) - $gutter );
   $cols6: ( 6 * ($column + $gutter) - $gutter );
   $cols7: ( 7 * ($column + $gutter) - $gutter );
   $cols8: ( 8 * ($column + $gutter) - $gutter );
   $cols9: ( 9 * ($column + $gutter) - $gutter );
  $cols10: ( 10 * ($column + $gutter) - $gutter );
  $cols11: ( 11 * ($column + $gutter) - $gutter );
  $cols12: ( 12 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}




//
// Tablet Layout, 12 columns
//
/* Tablet Layout */
@media only screen and (min-width: 768px) and (max-width: 1039px) {
  
  $column: 40px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels
  
  .show-tablet { display:block !important; }
  .hide-tablet { display:none !important; }
  
  .wrapper {
    width:($column + $gutter) * 12; // 12 columns
    margin:0 auto;
    padding:0;
  }
  
   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 2 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 4 * ($column + $gutter) - $gutter );
   $cols5: ( 5 * ($column + $gutter) - $gutter );
   $cols6: ( 6 * ($column + $gutter) - $gutter );
   $cols7: ( 7 * ($column + $gutter) - $gutter );
   $cols8: ( 8 * ($column + $gutter) - $gutter );
   $cols9: ( 9 * ($column + $gutter) - $gutter );
  $cols10: ( 10 * ($column + $gutter) - $gutter );
  $cols11: ( 11 * ($column + $gutter) - $gutter );
  $cols12: ( 12 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}


//
// Mobile Layout, 3 columns
//
/* Mobile Layout */
@media only screen and (max-width: 767px) {
  
  $column: 84px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels
  
  .show-mobile { display:block !important; }
  .hide-mobile { display:none !important; }
  
  .wrapper {
    width:($column + $gutter) * 3; // 3 columns
    margin:0 auto;
    padding:0;
  }
  
   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 3 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 3 * ($column + $gutter) - $gutter );
   $cols5: ( 3 * ($column + $gutter) - $gutter );
   $cols6: ( 3 * ($column + $gutter) - $gutter );
   $cols7: ( 3 * ($column + $gutter) - $gutter );
   $cols8: ( 3 * ($column + $gutter) - $gutter );
   $cols9: ( 3 * ($column + $gutter) - $gutter );
  $cols10: ( 3 * ($column + $gutter) - $gutter );
  $cols11: ( 3 * ($column + $gutter) - $gutter );
  $cols12: ( 3 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}


@media only screen and (min-width: 480px) and (max-width: 767px) {
  
  $column: 60px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels
  
  .show-mobile-wide { display:block !important; }
  .hide-mobile-wide { display:none !important; }
  
  .wrapper {
    width:($column + $gutter) * 6; // 6 columns
    margin:0 auto;
    padding:0;
  }
  
   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 2 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 6 * ($column + $gutter) - $gutter );
   $cols5: ( 6 * ($column + $gutter) - $gutter );
   $cols6: ( 6 * ($column + $gutter) - $gutter );
   $cols7: ( 6 * ($column + $gutter) - $gutter );
   $cols8: ( 6 * ($column + $gutter) - $gutter );
   $cols9: ( 6 * ($column + $gutter) - $gutter );
  $cols10: ( 6 * ($column + $gutter) - $gutter );
  $cols11: ( 6 * ($column + $gutter) - $gutter );
  $cols12: ( 6 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}

@media 
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (min-device-pixel-ratio: 2) {
    
}

/*****************************************************************************/
/*
  Consistency fixes & resets
    - using http://necolas.github.com/normalize.css as a base
*/

body, div,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre, dl, dt, dd, ol, ul, li,
fieldset, form, label, legend, th, td,
article, aside, figure, footer, header, hgroup, menu, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
}

article, aside, details, figcaption, figure, 
footer, header, hgroup, nav, section, audio, canvas, video {
  display: block;
}

html {
  -webkit-text-size-adjust: 100%; 
  -ms-text-size-adjust: 100%;
}


sub, sup {
  font-size: 75%; 
  line-height: 0; 
  position: relative; 
  vertical-align: baseline;
}

  sup {top: -0.5em;}
  sub {bottom: -0.25em;}

pre {
  white-space: pre; 
  white-space: pre-wrap; 
  word-wrap: break-word;
}

b, strong {font-weight: bold;}
abbr[title] {border-bottom: 1px dotted;}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

a img, img {
  -ms-interpolation-mode: bicubic;
  border: 0;
}

input, textarea, button, select {
  margin: 0;
  font-size: 100%;
  line-height: normal;
  vertical-align: baseline;
}

  button,
  html input[type="button"], 
  input[type="reset"], 
  input[type="submit"] {
      cursor: pointer;
      -webkit-appearance: button;
  }

  input[type="checkbox"],
  input[type="radio"] {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
       -o-box-sizing: border-box;
      -ms-box-sizing: border-box;
        box-sizing: border-box;
  }

  textarea {overflow: auto;}

/*****************************************************************************/
/*
  These are easy to forget
*/

::selection {
  background: red;
  color: white;
}
::-moz-selection {
  background: red;
  color: white;
}

img::selection {
  background: transparent;
}
img::-moz-selection {
  background: transparent;
}

body {
  -webkit-tap-highlight-color: rgba(255,0,0, 0.62);
}

.clearfix:before,
.clearfix:after {
  content: "\0020";
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}
.clearfix:after {
  clear: both;
}
.clearfix {
  zoom: 1;
}

/*****************************************************************************/
/*
  normalize.css v2.1.2 | MIT License | git.io/normalize
*/

article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary { display: block;}
audio, canvas, video { display: inline-block;}
audio:not([controls]) { display: none; height: 0;}
[hidden] { display: none;}
html { font-family: sans-serif;  -ms-text-size-adjust: 100%; /* 2 */ -webkit-text-size-adjust: 100%; /* 2 */}
body { margin: 0;}
a:focus { outline: thin dotted;}
a:active, a:hover { outline: 0;}
h1 { font-size: 2em; margin: 0.67em 0;}
abbr[title] { border-bottom: 1px dotted;}
b, strong { font-weight: bold;}
dfn { font-style: italic;}
hr { -moz-box-sizing: content-box; box-sizing: content-box; height: 0;}
mark { background: #ff0; color: #000;}
code, kbd, pre, samp { font-family: monospace, serif; font-size: 1em;}
pre { white-space: pre-wrap;}
q { quotes: "\201C" "\201D" "\2018" "\2019";}
small { font-size: 60%;}
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline;}
sup { top: -0.5em;}
sub { bottom: -0.25em;}
img { border: 0;}
svg:not(:root) { overflow: hidden;}
figure { margin: 0;}
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em;}
legend { border: 0;  padding: 0; /* 2 */}
button, input, select, textarea { font-family: inherit;  font-size: 100%; /* 2 */ margin: 0; /* 3 */}
button, input { line-height: normal;}
button, select { text-transform: none;}
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button;  cursor: pointer; /* 3 */}
button[disabled], html input[disabled] { cursor: default;}
input[type="checkbox"], input[type="radio"] { box-sizing: border-box;  padding: 0; /* 2 */}
input[type="search"] { -webkit-appearance: textfield;  -moz-box-sizing: content-box; -webkit-box-sizing: content-box; /* 2 */ box-sizing: content-box;}
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none;}
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0;}
textarea { overflow: auto;  vertical-align: top; /* 2 */}
table { border-collapse: collapse; border-spacing: 0;}

/*****************************************************************************/
/*
  Base
*/

* {
  margin: 0;
  padding: 0;
}

body, div,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre, dl, dt, dd, ol, ul, li,
fieldset, form, label, legend, th, td,
article, aside, figure, footer, header, hgroup, menu, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
}


body {
  font-size: ($font-size) / $em;
  background-color: #FFF;
  font-family: 'Source Sans Pro', Helvetica, sans-serif;
  text-align: center;
}

h1, h2, h3, h4, h5, h6 {
  font-size: 100%; }

h1 { margin-bottom: 1em; }
p { 
  margin: 1em 0; 
  &.lead {
    font-size: ($font-size + 3) / $em;
    color: $med-gray;
    margin: 0 0 1em;
  }
}

a, 
a:link,
a:visited,
a:hover,
a:active {
  color: $link-color;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/*****************************************************************************/
/*
  Common
*/

h1, h2, h3, h4 {
  font-weight: 200;
}
h1 {
  font-size: ($font-size + 52) / $em;
  margin: 30px 0px;
}

h2 {
  font-size: ($font-size + 11) / $em;
  margin: 30px 0px 15px;
}

h3 {
  font-size: ($font-size + 8) / $em;
  font-weight: 400;
  margin: 30px 0px;
  color: $med-gray;
  span {
    white-space: nowrap;
  }
}

h4 {
  font-size: ($font-size + 6) / $em;
  margin: 20px 0px 5px;
}

ol, ul {
    list-style: none outside none;
}

.img-circle {
    border-radius: 500px 500px 500px 500px;
    box-shadow: 0 0 0 8px #e0e0e0;
    max-width: 190px;
    margin-top: 60px;
}

#elsewhere ul {
    margin: 0 auto;
    width: 138px;
}
#elsewhere ul li {
  background: url("/img/elsewhere_icons.png") no-repeat scroll left top transparent;
  float: left;
  margin: 4px;
  padding: 0;
  height: 38px;
  width: 38px;
  &.crunchbase {
    background-position: -156px -105px ;
  }

  &.dribbble {
    background-position: -106px -105px ;
  }

  &.facebook {
    background-position: -56px -106px ;
  }

  &.foursquare {
    background-position: -6px -105px ;
  }

  &.github {
    background-position: -156px -55px ;
  }

  &.googleplus {
    background-position: -106px -55px ;
  }

  &.instagram {
    background-position: -56px -55px ;
  }

  &.lastfm {
    background-position: -6px -55px ;
  }

  &.linkedin {
    background-position: -156px -5px ;
  }

  &.pinboard {
    background-position: -106px -5px ;
  }

  &.twitter {
    background-position: -56px -5px ;
  }

  &.youtube {
    background-position: -6px -5px ;
  }
  a {
    display: block;
    height: 38px;
    width: 38px;
    span {
      display: inline-table;
      text-indent: -9999px;
    }
  }
  &:hover {
    opacity: 0.75;
  }
}
a.url, a.url:link, a.url:visited, a.url:active, a.url:hover, .extra {
    display: none;
}

/*****************************************************************************/
/*
  Posts
*/



/*****************************************************************************/
/*
  Footer
*/

footer {
  clear: both;
  padding: 40px 0px 20px;
}


.copyright {
  font-size: ($font-size - 2) / $em;
  clear: both;
}

/*****************************************************************************/
/*
  Images
*/

.images img {
    border: 1px solid #DDDDDD;
    float: left;
    margin: 4px;
}

/*****************************************************************************/
/*
  Text Zoom
    An easy way to zoom your entire layout in or out (as long as it's set in ems).
    Assuming your base font-size is 16:
    - the first one zooms in by a factor of (16+2)/16 = 1.125
    - the second one zooms out by a factor of (16-2)/16 = 0.875
*/

@media screen and (min-width: 1200px) {
  body {
    font-size: ($font-size + 2) / $em;
  }
}

@media screen and (max-width: 600px) {
  body {
    font-size: ($font-size - 2) / $em;
  }
}
