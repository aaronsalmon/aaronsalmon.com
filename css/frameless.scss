
/*****************************************************************************/
/*
  Frameless - http://framelessgrid.com
    - by Joni Korpi - http://jonikorpi.com
    - licensed under CC0 - http://creativecommons.org/publicdomain/zero/1.0
*/

$font-size: 16px;     // Your base font-size in pixels
$em: $font-size / 1em;  // Shorthand for outputting ems

$column: 48px;  // The column-width of your grid in pixels
$gutter: 24px;  // The gutter-width of your grid in pixels

//
// Column-widths in variables, in ems
//

 $cols1: ( 1 * ($column + $gutter) - $gutter) / $em;
 $cols2: ( 2 * ($column + $gutter) - $gutter) / $em;
 $cols3: ( 3 * ($column + $gutter) - $gutter) / $em;
 $cols4: ( 4 * ($column + $gutter) - $gutter) / $em;
 $cols5: ( 5 * ($column + $gutter) - $gutter) / $em;
 $cols6: ( 6 * ($column + $gutter) - $gutter) / $em;
 $cols7: ( 7 * ($column + $gutter) - $gutter) / $em;
 $cols8: ( 8 * ($column + $gutter) - $gutter) / $em;
 $cols9: ( 9 * ($column + $gutter) - $gutter) / $em;
$cols10: (10 * ($column + $gutter) - $gutter) / $em;
$cols11: (11 * ($column + $gutter) - $gutter) / $em;
$cols12: (12 * ($column + $gutter) - $gutter) / $em;
$cols13: (13 * ($column + $gutter) - $gutter) / $em;
$cols14: (14 * ($column + $gutter) - $gutter) / $em;
$cols15: (15 * ($column + $gutter) - $gutter) / $em;
$cols16: (16 * ($column + $gutter) - $gutter) / $em;


//
// Column-widths in a function, in ems
//

@mixin width ($cols:1) {
  width: ($cols * ($column + $gutter) - $gutter) / $em;
}
  .wrapper {
    width:($column + $gutter) * 16; // 12 columns
    margin:0 auto;
    padding:0;
  }
  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}

/* Defaults for showing/hiding divs based on screen size */

.show-default, .show-tablet, .show-mobile-wide, .show-mobile { display:none !important; }
.hide-default, .hide-tablet, .hide-mobile-wide, .hide-mobile { display:block !important; }

//
// Default Layout, 12 columns
//
/* Default Layout */
@media only screen and (min-width: 1040px) {

  $column: 65px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels

  .show-default { display:block !important; }
  .hide-default { display:none !important; }

  .wrapper {
    width:($column + $gutter) * 12; // 12 columns
    margin:0 auto;
    padding:0;
  }

   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 2 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 4 * ($column + $gutter) - $gutter );
   $cols5: ( 5 * ($column + $gutter) - $gutter );
   $cols6: ( 6 * ($column + $gutter) - $gutter );
   $cols7: ( 7 * ($column + $gutter) - $gutter );
   $cols8: ( 8 * ($column + $gutter) - $gutter );
   $cols9: ( 9 * ($column + $gutter) - $gutter );
  $cols10: ( 10 * ($column + $gutter) - $gutter );
  $cols11: ( 11 * ($column + $gutter) - $gutter );
  $cols12: ( 12 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}




//
// Tablet Layout, 12 columns
//
/* Tablet Layout */
@media only screen and (min-width: 768px) and (max-width: 1039px) {
  
  $column: 40px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels
  
  .show-tablet { display:block !important; }
  .hide-tablet { display:none !important; }
  
  .wrapper {
    width:($column + $gutter) * 12; // 12 columns
    margin:0 auto;
    padding:0;
  }
  
   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 2 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 4 * ($column + $gutter) - $gutter );
   $cols5: ( 5 * ($column + $gutter) - $gutter );
   $cols6: ( 6 * ($column + $gutter) - $gutter );
   $cols7: ( 7 * ($column + $gutter) - $gutter );
   $cols8: ( 8 * ($column + $gutter) - $gutter );
   $cols9: ( 9 * ($column + $gutter) - $gutter );
  $cols10: ( 10 * ($column + $gutter) - $gutter );
  $cols11: ( 11 * ($column + $gutter) - $gutter );
  $cols12: ( 12 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}


//
// Mobile Layout, 3 columns
//
/* Mobile Layout */
@media only screen and (max-width: 767px) {
  
  $column: 84px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels
  
  .show-mobile { display:block !important; }
  .hide-mobile { display:none !important; }
  
  .wrapper {
    width:($column + $gutter) * 3; // 3 columns
    margin:0 auto;
    padding:0;
  }
  
   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 3 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 3 * ($column + $gutter) - $gutter );
   $cols5: ( 3 * ($column + $gutter) - $gutter );
   $cols6: ( 3 * ($column + $gutter) - $gutter );
   $cols7: ( 3 * ($column + $gutter) - $gutter );
   $cols8: ( 3 * ($column + $gutter) - $gutter );
   $cols9: ( 3 * ($column + $gutter) - $gutter );
  $cols10: ( 3 * ($column + $gutter) - $gutter );
  $cols11: ( 3 * ($column + $gutter) - $gutter );
  $cols12: ( 3 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}


@media only screen and (min-width: 480px) and (max-width: 767px) {
  
  $column: 60px;  // The column-width of your grid in pixels
  $gutter: 20px;  // The gutter-width of your grid in pixels
  
  .show-mobile-wide { display:block !important; }
  .hide-mobile-wide { display:none !important; }
  
  .wrapper {
    width:($column + $gutter) * 6; // 6 columns
    margin:0 auto;
    padding:0;
  }
  
   $cols1: ( 1 * ($column + $gutter) - $gutter );
   $cols2: ( 2 * ($column + $gutter) - $gutter );
   $cols3: ( 3 * ($column + $gutter) - $gutter );
   $cols4: ( 6 * ($column + $gutter) - $gutter );
   $cols5: ( 6 * ($column + $gutter) - $gutter );
   $cols6: ( 6 * ($column + $gutter) - $gutter );
   $cols7: ( 6 * ($column + $gutter) - $gutter );
   $cols8: ( 6 * ($column + $gutter) - $gutter );
   $cols9: ( 6 * ($column + $gutter) - $gutter );
  $cols10: ( 6 * ($column + $gutter) - $gutter );
  $cols11: ( 6 * ($column + $gutter) - $gutter );
  $cols12: ( 6 * ($column + $gutter) - $gutter );

  .col {
    display:inline;
    float:left;
    margin-left:($gutter / 2);
    margin-right:($gutter / 2);
  }

  .wrapper {
    .col1 {width: $cols1;}
    .col2 {width: $cols2;}
    .col3 {width: $cols3;}
    .col4 {width: $cols4;}
    .col5 {width: $cols5;}
    .col6 {width: $cols6;}
    .col7 {width: $cols7;}
    .col8 {width: $cols8;}
    .col9 {width: $cols9;}
    .col10 {width: $cols10;}
    .col11 {width: $cols11;}
    .col12 {width: $cols12;}
  }
}

@media 
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (min-device-pixel-ratio: 2) {
    
}